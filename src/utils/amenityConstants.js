// Constants v√† types cho Master Amenities

/**
 * C·∫•u tr√∫c d·ªØ li·ªáu Amenity t·ª´ backend
 * @typedef {Object} Amenity
 * @property {string} id - UUID c·ªßa amenity
 * @property {string} name - T√™n amenity
 * @property {string} iconUrl - URL c·ªßa icon
 * @property {boolean} active - Tr·∫°ng th√°i ho·∫°t ƒë·ªông
 * @property {string} createdAt - Th·ªùi gian t·∫°o
 * @property {string} updatedAt - Th·ªùi gian c·∫≠p nh·∫≠t
 */

/**
 * D·ªØ li·ªáu request ƒë·ªÉ t·∫°o amenity m·ªõi
 * @typedef {Object} CreateAmenityRequest
 * @property {string} name - T√™n amenity
 * @property {string} icon - URL icon
 */

// Danh s√°ch c√°c amenities ph·ªï bi·∫øn v·ªõi icon m·∫∑c ƒë·ªãnh
export const COMMON_AMENITIES = [
  {
    name: "WiFi mi·ªÖn ph√≠",
    icon: "üì∂",
    category: "internet"
  },
  {
    name: "ƒêi·ªÅu h√≤a",
    icon: "‚ùÑÔ∏è",
    category: "comfort"
  },
  {
    name: "M√°y n∆∞·ªõc n√≥ng",
    icon: "üöø",
    category: "bathroom"
  },
  {
    name: "T·ªß l·∫°nh",
    icon: "üßä",
    category: "kitchen"
  },
  {
    name: "M√°y gi·∫∑t",
    icon: "üß∫",
    category: "laundry"
  },
  {
    name: "B·∫øp n·∫•u",
    icon: "üî•",
    category: "kitchen"
  },
  {
    name: "Ban c√¥ng",
    icon: "üåø",
    category: "outdoor"
  },
  {
    name: "Gi∆∞·ªùng",
    icon: "üõèÔ∏è",
    category: "furniture"
  },
  {
    name: "T·ªß qu·∫ßn √°o",
    icon: "üëï",
    category: "furniture"
  },
  {
    name: "B√†n h·ªçc",
    icon: "üìö",
    category: "furniture"
  },
  {
    name: "Gh·∫ø",
    icon: "ü™ë",
    category: "furniture"
  },
  {
    name: "Tivi",
    icon: "üì∫",
    category: "entertainment"
  },
  {
    name: "Camera an ninh",
    icon: "üìπ",
    category: "security"
  },
  {
    name: "Thang m√°y",
    icon: "üõó",
    category: "building"
  },
  {
    name: "B√£i xe",
    icon: "üÖøÔ∏è",
    category: "parking"
  },
  {
    name: "G·∫ßn tr∆∞·ªùng h·ªçc",
    icon: "üéì",
    category: "location"
  },
  {
    name: "G·∫ßn b·ªánh vi·ªán",
    icon: "üè•",
    category: "location"
  },
  {
    name: "G·∫ßn ch·ª£",
    icon: "üõí",
    category: "location"
  },
  {
    name: "G·∫ßn b·∫øn xe",
    icon: "üöå",
    category: "location"
  },
  {
    name: "C·ª≠a s·ªï",
    icon: "ü™ü",
    category: "comfort"
  }
];

// Categories ƒë·ªÉ nh√≥m amenities
export const AMENITY_CATEGORIES = {
  INTERNET: "internet",
  COMFORT: "comfort", 
  BATHROOM: "bathroom",
  KITCHEN: "kitchen",
  LAUNDRY: "laundry",
  OUTDOOR: "outdoor",
  FURNITURE: "furniture",
  ENTERTAINMENT: "entertainment",
  SECURITY: "security",
  BUILDING: "building",
  PARKING: "parking",
  LOCATION: "location"
};

// Labels cho categories
export const AMENITY_CATEGORY_LABELS = {
  [AMENITY_CATEGORIES.INTERNET]: "Internet & C√¥ng ngh·ªá",
  [AMENITY_CATEGORIES.COMFORT]: "Ti·ªán nghi",
  [AMENITY_CATEGORIES.BATHROOM]: "Ph√≤ng t·∫Øm",
  [AMENITY_CATEGORIES.KITCHEN]: "B·∫øp",
  [AMENITY_CATEGORIES.LAUNDRY]: "Gi·∫∑t gi≈©",
  [AMENITY_CATEGORIES.OUTDOOR]: "Ngo√†i tr·ªùi",
  [AMENITY_CATEGORIES.FURNITURE]: "N·ªôi th·∫•t",
  [AMENITY_CATEGORIES.ENTERTAINMENT]: "Gi·∫£i tr√≠",
  [AMENITY_CATEGORIES.SECURITY]: "An ninh",
  [AMENITY_CATEGORIES.BUILDING]: "T√≤a nh√†",
  [AMENITY_CATEGORIES.PARKING]: "ƒê·ªó xe",
  [AMENITY_CATEGORIES.LOCATION]: "V·ªã tr√≠"
};

// Validation rules cho amenities
export const AMENITY_VALIDATION = {
  NAME: {
    MIN_LENGTH: 2,
    MAX_LENGTH: 100,
    REQUIRED: true
  },
  ICON: {
    MAX_LENGTH: 500,
    REQUIRED: false
  },
  MAX_SELECTED: 20 // T·ªëi ƒëa 20 amenities ƒë∆∞·ª£c ch·ªçn
};

// Error messages
export const AMENITY_ERRORS = {
  NAME_REQUIRED: "T√™n ti·ªán √≠ch kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng",
  NAME_TOO_SHORT: `T√™n ti·ªán √≠ch ph·∫£i c√≥ √≠t nh·∫•t ${AMENITY_VALIDATION.NAME.MIN_LENGTH} k√Ω t·ª±`,
  NAME_TOO_LONG: `T√™n ti·ªán √≠ch kh√¥ng ƒë∆∞·ª£c qu√° ${AMENITY_VALIDATION.NAME.MAX_LENGTH} k√Ω t·ª±`,
  ICON_TOO_LONG: `URL icon kh√¥ng ƒë∆∞·ª£c qu√° ${AMENITY_VALIDATION.ICON.MAX_LENGTH} k√Ω t·ª±`,
  MAX_SELECTED_EXCEEDED: `Ch·ªâ ƒë∆∞·ª£c ch·ªçn t·ªëi ƒëa ${AMENITY_VALIDATION.MAX_SELECTED} ti·ªán √≠ch`,
  FETCH_ERROR: "Kh√¥ng th·ªÉ t·∫£i danh s√°ch ti·ªán √≠ch",
  CREATE_ERROR: "Kh√¥ng th·ªÉ t·∫°o ti·ªán √≠ch m·ªõi",
  DELETE_ERROR: "Kh√¥ng th·ªÉ x√≥a ti·ªán √≠ch"
};

// Success messages
export const AMENITY_SUCCESS = {
  CREATED: "T·∫°o ti·ªán √≠ch th√†nh c√¥ng",
  DELETED: "X√≥a ti·ªán √≠ch th√†nh c√¥ng",
  UPDATED: "C·∫≠p nh·∫≠t ti·ªán √≠ch th√†nh c√¥ng",
  SELECTED: "ƒê√£ ch·ªçn ti·ªán √≠ch",
  UNSELECTED: "ƒê√£ b·ªè ch·ªçn ti·ªán √≠ch"
};

export default {
  COMMON_AMENITIES,
  AMENITY_CATEGORIES,
  AMENITY_CATEGORY_LABELS,
  AMENITY_VALIDATION,
  AMENITY_ERRORS,
  AMENITY_SUCCESS
};
